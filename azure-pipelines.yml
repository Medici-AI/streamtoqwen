trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  ACR_NAME: rmdevacr30204
  RG_NAME: rmdev-rg
  AKS_NAME: rmdev-aks
  NAMESPACE: app-dev
  CHART_PATH: deploy/helm
  CHART_RELEASE: streamllm
  KV_NAME: rmdev-kv
  IMAGE_NAME: streamllm

stages:
  - stage: BuildAndDeploy
    displayName: Build image and deploy to AKS
    jobs:
      - job: BuildDeploy
        displayName: Build and Deploy
        steps:
          - task: AzureKeyVault@2
            displayName: Fetch secrets from Key Vault
            inputs:
              azureSubscription: az-sub-rmdev1
              KeyVaultName: $(KV_NAME)
              SecretsFilter: |
                OPENAI--API--KEY
                PINECONE--API--KEY
                AZURE--SERVICE--BUS--CONNECTION
                AZURE--COSMOS--CONNECTION
                REDIS--URL

          - task: AzureCLI@2
            displayName: Build image in ACR and deploy with Helm
            inputs:
              azureSubscription: az-sub-rmdev1
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -euo pipefail
                # Resolve ACR login server
                ACR_LOGIN=$(az acr show -n $(ACR_NAME) --query loginServer -o tsv)
                IMG_TAG=${BUILD_SOURCEVERSION:0:7}
                IMG=$ACR_LOGIN/$(IMAGE_NAME):$IMG_TAG

                echo "Building $IMG in ACR..."
                az acr build -r $(ACR_NAME) -t $IMG .

                echo "Fetching AKS credentials..."
                az aks get-credentials -g $(RG_NAME) -n $(AKS_NAME) --overwrite-existing

                echo "Ensuring namespace $(NAMESPACE) exists..."
                kubectl create namespace $(NAMESPACE) --dry-run=client -o yaml | kubectl apply -f -

                echo "Syncing k8s secret from Key Vault variables..."
                # KeyVault task maps dashes to underscores in variable names
                OPENAI_VAR=${OPENAI__API__KEY:-}
                PINECONE_VAR=${PINECONE__API__KEY:-}
                SB_VAR=${AZURE__SERVICE__BUS__CONNECTION:-}
                COSMOS_VAR=${AZURE__COSMOS__CONNECTION:-}
                REDIS_VAR=${REDIS__URL:-}

                kubectl -n $(NAMESPACE) delete secret streamllm-secrets --ignore-not-found
                kubectl -n $(NAMESPACE) create secret generic streamllm-secrets \
                  --from-literal=OPENAI--API--KEY="$OPENAI_VAR" \
                  --from-literal=PINECONE--API--KEY="$PINECONE_VAR" \
                  --from-literal=AZURE--SERVICE--BUS--CONNECTION="$SB_VAR" \
                  --from-literal=AZURE--COSMOS--CONNECTION="$COSMOS_VAR" \
                  --from-literal=REDIS--URL="$REDIS_VAR"

                echo "Helm upgrade..."
                helm upgrade --install $(CHART_RELEASE) $(CHART_PATH) \
                  --namespace $(NAMESPACE) \
                  --set image.repository=$ACR_LOGIN/$(IMAGE_NAME) \
                  --set image.tag=$IMG_TAG \
                  -f $(CHART_PATH)/values-dev.yaml

                echo "Waiting for rollout..."
                kubectl -n $(NAMESPACE) rollout status deploy/$(CHART_RELEASE) --timeout=300s


